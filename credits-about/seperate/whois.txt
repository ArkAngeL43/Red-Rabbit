
lets role over the very first command, it is as simple as it sounds 

whois = a simple whois name server parser written for red rabbit in pure ruby 

we execute this by typing 

`whois`

in the input feild in RR5

you will be prompted to input a domain name DO NOT USE www AS A DOMAIN NAME

the following error will occure

```
Traceback (most recent call last):
	7: from main.rb:362:in `<main>'
	6: from main.rb:359:in `main'
	5: from main.rb:346:in `console_main'
	4: from main.rb:315:in `console_commands'
	3: from main.rb:110:in `server_names'
	2: from /var/lib/gems/2.7.0/gems/whois-parser-1.2.0/lib/whois/parser.rb:348:in `method_missing'
	1: from /var/lib/gems/2.7.0/gems/whois-parser-1.2.0/lib/whois/parser.rb:327:in `technical_contacts'
/var/lib/gems/2.7.0/gems/whois-parser-1.2.0/lib/whois/parser.rb:365:in `delegate_property_to_parsers': Unable to find a parser for property `technical_contacts' (Whois::AttributeNotImplemented)

```

THE WHOIS AND WHOIS-PARSER WILL NOT TAKE WWW URLS 

every URL will have a simple domain name which can be resoluted as something like this 

google.com, nasa.gov, education.edu, twitter.com etc 

url stays the same, the following output will occure

```
;; Answer received from 75.75.75.75:53 (45 bytes)
;;
;; HEADER SECTION
;; id = 64710
;; qr = 1	opCode: QUERY	aa = 0	tc = 0	rd = 1
;; ra = 1	ad = 0	cd = 0	rcode = NoError
;; qdCount = 1	anCount = 1	nsCount = 0	arCount = 0

;; QUESTION SECTION (1 record):
;; example.com.                 IN      A       

;; ANSWER SECTION (1 record):
example.com.            66801   IN      A       93.184.216.34


example.com.            61711   IN      A       93.184.216.34


example.com.            86400   IN      MX      0 
{"accept-encoding"=>["gzip;q=1.0,deflate;q=0.6,identity;q=0.3"],
 "accept"=>["*/*"],
 "user-agent"=>["Ruby"]}
{"accept-ranges"=>["bytes"],
 "age"=>["561447"],
 "cache-control"=>["max-age=604800"],
 "content-type"=>["text/html; charset=UTF-8"],
 "date"=>["Wed, 22 Dec 2021 03:54:12 GMT"],
 "etag"=>["\"3147526947\""],
 "expires"=>["Wed, 29 Dec 2021 03:54:12 GMT"],
 "last-modified"=>["Thu, 17 Oct 2019 07:18:26 GMT"],
 "server"=>["ECS (mic/9AF5)"],
 "vary"=>["Accept-Encoding"],
 "x-cache"=>["HIT"],
 "content-length"=>["648"],
 "connection"=>["close"]}
-------------------------
[*] Response ~> 200
[*] Checking More Connections..


```


we get the basic information as we would the ajax spiders but a bit more tracer- kinda 

as you can seee you get DNS queries and records as well as answeres of the bytes being sent and data 

that was sent to the domain name you input
